class AIUIIntegration{constructor(){this.ai=null,this.aiCalculationEngine=null,this.isActive=!1,this.assistantPanel=null,this.contextualHelp=new Map,this.autoFillActive=!0,this.realTimeAnalysis=!0,this.inputAnalysisActive=!0,this.analysisDebounceTimer=null,this.lastAnalysisData=null,this.realTimePanel=null,this.init()}async init(){"undefined"!=typeof AIAssistant?(this.ai=new AIAssistant,await this.ai.init()):console.warn("AI Assistant not available"),"undefined"!=typeof AICalculationEngine&&(this.aiCalculationEngine=new AICalculationEngine,console.log("AI Calculation Engine initialized")),this.createAssistantPanel(),this.createRealTimePanel(),this.setupEventListeners(),this.initializeContextualHelp(),this.setupAutoFill(),this.setupRealTimeAnalysis(),this.setupComprehensiveInputAnalysis(),this.injectCSS(),this.isActive=!0,console.log("Enhanced AI UI Integration initialized")}createAssistantPanel(){const e=document.createElement("div");e.id="ai-assistant-button",e.className="fixed bottom-6 right-6 z-50 cursor-pointer transform transition-all hover:scale-105",e.innerHTML='\n            <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-full p-4 shadow-lg hover:shadow-xl">\n                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>\n                </svg>\n            </div>\n            <div class="absolute -top-2 -right-2 w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>\n        ';const t=document.createElement("div");t.id="ai-assistant-panel",t.className="fixed bottom-24 right-6 w-80 bg-white rounded-lg shadow-2xl border z-50 transform translate-y-full transition-all duration-300 opacity-0",t.innerHTML='\n            <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-4 rounded-t-lg">\n                <div class="flex items-center justify-between">\n                    <div class="flex items-center">\n                        <div class="w-8 h-8 bg-white bg-opacity-20 rounded-full flex items-center justify-center mr-3">\n                            <span class="text-lg">🤖</span>\n                        </div>\n                        <div>\n                            <h3 class="font-semibold">AI Assistant</h3>\n                            <p class="text-xs opacity-90">Ready to help</p>\n                        </div>\n                    </div>\n                    <button id="close-assistant" class="text-white hover:text-gray-200">\n                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            \n            <div class="p-4">\n                \x3c!-- Chat Messages --\x3e\n                <div id="ai-chat-messages" class="h-64 overflow-y-auto mb-4 space-y-3">\n                    <div class="ai-message">\n                        <div class="bg-gray-100 rounded-lg p-3 text-sm">\n                            <p>👋 Hi! I\'m your GEM AI assistant. I can help you with:</p>\n                            <ul class="list-disc list-inside mt-2 text-xs text-gray-600">\n                                <li>Auto-filling vehicle information</li>\n                                <li>Analyzing PDF settings</li>\n                                <li>Recommending accessories</li>\n                                <li>Optimizing controller settings</li>\n                                <li>Troubleshooting issues</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                \n                \x3c!-- Quick Actions --\x3e\n                <div class="mb-4">\n                    <div class="grid grid-cols-2 gap-2">\n                        <button class="ai-quick-action p-2 text-xs bg-blue-50 text-blue-700 rounded hover:bg-blue-100" data-action="auto-fill">\n                            ✨ Auto-fill Vehicle\n                        </button>\n                        <button class="ai-quick-action p-2 text-xs bg-green-50 text-green-700 rounded hover:bg-green-100" data-action="analyze-pdf">\n                            📄 Analyze PDF\n                        </button>\n                        <button class="ai-quick-action p-2 text-xs bg-purple-50 text-purple-700 rounded hover:bg-purple-100" data-action="recommendations">\n                            💡 Get Recommendations\n                        </button>\n                        <button class="ai-quick-action p-2 text-xs bg-orange-50 text-orange-700 rounded hover:bg-orange-100" data-action="optimize">\n                            🎯 Optimize Settings\n                        </button>\n                    </div>\n                </div>\n                \n                \x3c!-- Chat Input --\x3e\n                <div class="flex space-x-2">\n                    <input type="text" id="ai-chat-input" placeholder="Ask me anything..." \n                           class="flex-1 px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">\n                    <button id="ai-send-button" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm">\n                        Send\n                    </button>\n                </div>\n            </div>\n        ',document.body.appendChild(e),document.body.appendChild(t),this.assistantPanel=t,e.addEventListener("click",(()=>this.toggleAssistantPanel())),document.getElementById("close-assistant").addEventListener("click",(()=>this.hideAssistantPanel())),this.setupChatInterface()}setupChatInterface(){const e=document.getElementById("ai-chat-input"),t=document.getElementById("ai-send-button"),n=async()=>{const t=e.value.trim();if(t){this.addChatMessage(t,"user"),e.value="",this.showTypingIndicator();try{const e=this.getCurrentContext(),n=await this.ai.getRealTimeAssistance(t,e);this.hideTypingIndicator(),n.success?(this.addChatMessage(n.response.message,"ai"),n.suggestions&&n.suggestions.length>0&&this.addSuggestions(n.suggestions)):this.addChatMessage("Sorry, I encountered an error. Please try again.","ai")}catch(e){this.hideTypingIndicator(),this.addChatMessage("I'm having trouble connecting. Please check your connection.","ai")}}};t.addEventListener("click",n),e.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),n())})),document.querySelectorAll(".ai-quick-action").forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.action;this.handleQuickAction(t)}))}))}setupEventListeners(){document.getElementById("vehicle-model")?.addEventListener("change",(e=>{this.autoFillActive&&e.target.value&&this.triggerAutoFill()})),document.getElementById("vehicle-year")?.addEventListener("change",(e=>{this.autoFillActive&&e.target.value&&this.triggerAutoFill()})),document.getElementById("motor-type-ai-assist")?.addEventListener("click",(()=>{this.showMotorTypeAssistance()})),document.getElementById("settings-pdf")?.addEventListener("change",(e=>{e.target.files[0]&&this.analyzePDFFile(e.target.files[0])})),this.setupContextualHelp()}initializeContextualHelp(){this.contextualHelp.set("vehicle-model",{title:"Vehicle Model",content:"Select your GEM model. The AI will auto-fill compatible controller and motor information.",tips:["e2/e4/e6 refer to passenger capacity","eS/eL/eM are utility models","elXD is the heavy-duty variant"]}),this.contextualHelp.set("controller-type",{title:"Controller Type",content:"The motor controller manages power delivery. T2 is the most common modern controller.",tips:["T2: Modern, programmable controller","T4: Newer, more advanced","T1: Legacy controller (limited features)"]}),this.contextualHelp.set("motor-type",{title:"Motor Type",content:"DC motors are standard, AC motors offer better efficiency and performance.",tips:["DC Stock: 3.5HP typical","DC Upgrade: 5HP+ aftermarket","AC motors: More efficient, quieter"]}),this.contextualHelp.set("current-speed",{title:"Current Top Speed",content:"Your vehicle's actual top speed determines its legal classification.",tips:["≤19 MPH: Golf Cart classification","20-25 MPH: LSV classification",">25 MPH: May not be street legal"]})}setupContextualHelp(){this.contextualHelp.forEach(((e,t)=>{const n=document.getElementById(t);n&&(n.addEventListener("focus",(()=>this.showContextualHelp(t))),n.addEventListener("blur",(()=>this.hideContextualHelp())))}))}setupAutoFill(){const e=document.createElement("div");e.id="ai-autofill-indicator",e.className="fixed top-4 right-4 bg-blue-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform -translate-y-full transition-all opacity-0",e.innerHTML='\n            <div class="flex items-center">\n                <div class="animate-spin mr-2">⚡</div>\n                <span class="text-sm">AI is auto-filling vehicle data...</span>\n            </div>\n        ',document.body.appendChild(e)}setupRealTimeAnalysis(){["vehicle-model","vehicle-year","controller-type","motor-type","current-speed"].forEach((e=>{const t=document.getElementById(e);t&&t.addEventListener("change",(()=>{this.realTimeAnalysis&&this.performRealTimeAnalysis()}))}))}setupComprehensiveInputAnalysis(){document.querySelectorAll("input, select, textarea").forEach((e=>{"file"===e.type||"hidden"===e.type||e.classList.contains("no-ai-analysis")||(e.addEventListener("input",(()=>this.debouncedInputAnalysis(e))),e.addEventListener("change",(()=>this.debouncedInputAnalysis(e))),e.addEventListener("focus",(()=>this.onInputFocus(e))),e.addEventListener("blur",(()=>this.onInputBlur(e))))})),this.observeFormChanges(),window.addEventListener("aiCalculationUpdate",(e=>{this.handleCalculationUpdate(e.detail)})),window.addEventListener("accessoryInstalled",(()=>{this.performComprehensiveAnalysis("accessory_change")})),window.addEventListener("drivingModeChanged",(()=>{this.performComprehensiveAnalysis("driving_mode_change")}))}async triggerAutoFill(){const e=this.gatherVehicleData();this.showAutoFillIndicator();try{const t=await this.ai.autoFillVehicleFields(e);t.success?(this.applyAutoFillResults(t),this.showAutoFillSuccess(t.message)):this.showAutoFillMessage("Unable to auto-fill: "+t.message,"warning")}catch(e){this.showAutoFillMessage("Auto-fill failed: "+e.message,"error")}finally{this.hideAutoFillIndicator()}}async analyzePDFFile(e){this.showPDFAnalysisIndicator();try{const t=await this.ai.analyzePDF(e);t.success?(this.displayPDFAnalysisResults(t),this.addChatMessage(`📄 PDF analyzed successfully! Found ${Object.keys(t.settings).length} controller settings.`,"ai")):this.showPDFAnalysisError(t.message)}catch(e){this.showPDFAnalysisError("PDF analysis failed: "+e.message)}finally{this.hidePDFAnalysisIndicator()}}async showMotorTypeAssistance(){const e=this.gatherVehicleData();if(e.model&&e.year)try{const t=await this.ai.autoFillVehicleFields(e);if(t.success&&t.data.motorType){const e=document.getElementById("motor-type"),n=document.getElementById("motor-ai-suggestion");e.value=t.data.motorType,n.classList.remove("hidden"),n.innerHTML=`\n                    <strong>AI Suggestion:</strong> ${t.data.motorType} \n                    <span class="text-xs">(${Math.round(100*t.confidence)}% confidence)</span>\n                    <br><small>${t.message}</small>\n                `,e.dispatchEvent(new Event("change"))}else this.showTooltip("motor-type-ai-assist","Unable to suggest motor type for this configuration")}catch(e){this.showTooltip("motor-type-ai-assist","AI assistance temporarily unavailable")}else this.showTooltip("motor-type-ai-assist","Please select vehicle model and year first")}async performRealTimeAnalysis(){const e=this.gatherVehicleData();if(!(Object.keys(e).filter((t=>e[t])).length<3))try{if(this.ai){const t=this.getUsageHistory(),n=await this.ai.getUsageBasedRecommendations(e,t);n.success&&n.recommendations.length>0&&this.showRealtimeRecommendations(n.recommendations.slice(0,3))}await this.performComprehensiveAnalysis("form_change")}catch(e){console.warn("Real-time analysis failed:",e)}}debouncedInputAnalysis(e){clearTimeout(this.analysisDebounceTimer),this.analysisDebounceTimer=setTimeout((()=>{this.analyzeInputChange(e)}),500)}async analyzeInputChange(e){if(!this.inputAnalysisActive||!e.value)return;const t={id:e.id,name:e.name,value:e.value,type:e.type,context:this.getInputContext(e)};try{const n=await this.analyzeInputValue(t);n.suggestions.length>0&&this.showInputSuggestions(e,n.suggestions),n.warnings.length>0&&this.showInputWarnings(e,n.warnings),this.updateRealTimePanel(n)}catch(e){console.warn("Input analysis failed:",e)}}async performComprehensiveAnalysis(e="manual"){if(!this.aiCalculationEngine)return;const t=this.gatherComprehensiveData();if(!this.lastAnalysisData||!this.dataIsSimilar(t,this.lastAnalysisData)){this.lastAnalysisData=t;try{this.showRealTimeAnalysisLoading();const n=await this.aiCalculationEngine.calculateOptimalSettings(t.inputData,t.context);n&&n.settings&&(this.displayComprehensiveAnalysis(n,e),this.updateRealTimePanelWithCalculations(n),this.showIntelligentRecommendations(n,e))}catch(e){console.error("Comprehensive analysis failed:",e),this.showAnalysisError("Analysis temporarily unavailable")}finally{this.hideRealTimeAnalysisLoading()}}}async handleQuickAction(e){switch(e){case"auto-fill":await this.triggerAutoFill();break;case"analyze-pdf":document.getElementById("settings-pdf")?.click();break;case"recommendations":await this.getRecommendations();break;case"optimize":await this.optimizeSettings()}}async getRecommendations(){this.addChatMessage("Getting personalized recommendations...","ai");try{const e=this.gatherVehicleData(),t=this.getUsageHistory(),n=await this.ai.getUsageBasedRecommendations(e,t);n.success?this.displayRecommendations(n.recommendations):this.addChatMessage("Unable to generate recommendations at this time.","ai")}catch(e){this.addChatMessage("Error getting recommendations: "+e.message,"ai")}}async optimizeSettings(){const e=this.getCurrentContext();if(e.vehicle&&e.vehicle.model){this.addChatMessage("Calculating optimal settings...","ai");try{const t=await this.ai.suggestOptimalSettings(e);t.success?this.displayOptimalSettings(t):this.addChatMessage("Unable to optimize settings: "+t.message,"ai")}catch(e){this.addChatMessage("Optimization failed: "+e.message,"ai")}}else this.addChatMessage("Please complete vehicle information first.","ai")}gatherVehicleData(){return{model:document.getElementById("vehicle-model")?.value,year:document.getElementById("vehicle-year")?.value,controller:document.getElementById("controller-type")?.value,motorType:document.getElementById("motor-type")?.value,motorPower:document.getElementById("motor-power")?.value,currentSpeed:parseInt(document.getElementById("current-speed")?.value)||null}}getCurrentContext(){return{vehicle:this.gatherVehicleData(),accessories:this.getInstalledAccessories(),conditions:this.getCurrentConditions(),drivingMode:this.getCurrentDrivingMode()}}getInstalledAccessories(){return"undefined"!=typeof accessoriesManager?accessoriesManager.getInstalledAccessories():[]}getCurrentConditions(){return{weather:{temperature:70,conditions:"clear"},terrain:"mixed",time:(new Date).getHours()}}getCurrentDrivingMode(){return"undefined"!=typeof drivingModes&&drivingModes.currentMode?drivingModes.currentMode.id:null}getUsageHistory(){try{return JSON.parse(localStorage.getItem("gem-usage-history")||"[]")}catch{return[]}}toggleAssistantPanel(){this.assistantPanel.classList.contains("translate-y-full")?this.showAssistantPanel():this.hideAssistantPanel()}showAssistantPanel(){this.assistantPanel.classList.remove("translate-y-full","opacity-0"),this.assistantPanel.classList.add("translate-y-0","opacity-100")}hideAssistantPanel(){this.assistantPanel.classList.add("translate-y-full","opacity-0"),this.assistantPanel.classList.remove("translate-y-0","opacity-100")}addChatMessage(e,t){const n=document.getElementById("ai-chat-messages"),i=document.createElement("div");i.className="user"===t?"user-message text-right":"ai-message";const s="user"===t?"bg-blue-600 text-white ml-8":"bg-gray-100 text-gray-800 mr-8";i.innerHTML=`\n            <div class="rounded-lg p-3 text-sm ${s}">\n                ${e}\n            </div>\n        `,n.appendChild(i),n.scrollTop=n.scrollHeight}showTypingIndicator(){const e=document.getElementById("ai-chat-messages"),t=document.createElement("div");t.id="typing-indicator",t.className="ai-message",t.innerHTML='\n            <div class="bg-gray-100 rounded-lg p-3 text-sm mr-8">\n                <div class="flex items-center">\n                    <div class="typing-dots">\n                        <div class="dot"></div>\n                        <div class="dot"></div>\n                        <div class="dot"></div>\n                    </div>\n                    <span class="ml-2 text-xs text-gray-500">AI is thinking...</span>\n                </div>\n            </div>\n        ',e.appendChild(t),e.scrollTop=e.scrollHeight}hideTypingIndicator(){const e=document.getElementById("typing-indicator");e&&e.remove()}showAutoFillIndicator(){const e=document.getElementById("ai-autofill-indicator");e.classList.remove("-translate-y-full","opacity-0"),e.classList.add("translate-y-0","opacity-100")}hideAutoFillIndicator(){const e=document.getElementById("ai-autofill-indicator");e.classList.add("-translate-y-full","opacity-0"),e.classList.remove("translate-y-0","opacity-100")}applyAutoFillResults(e){const t=e.data;Object.entries(t).forEach((([e,t])=>{if(t){const n=document.getElementById("currentSpeed"===e?"current-speed":"motorType"===e?"motor-type":"motorPower"===e?"motor-power":"controller"===e?"controller-type":e);n&&!n.value&&(n.value=t,n.dispatchEvent(new Event("change")))}}))}showAutoFillSuccess(e){this.showNotification(e,"success"),this.assistantPanel&&this.addChatMessage(`✨ ${e}`,"ai")}showAutoFillMessage(e,t){this.showNotification(e,t)}showNotification(e,t="info"){const n=document.createElement("div");n.className=`fixed top-4 left-1/2 transform -translate-x-1/2 p-4 rounded-lg shadow-lg z-50 ${"success"===t?"bg-green-500":"error"===t?"bg-red-500":"warning"===t?"bg-yellow-500":"bg-blue-500"} text-white max-w-md`,n.textContent=e,document.body.appendChild(n),setTimeout((()=>{n.remove()}),4e3)}showTooltip(e,t){const n=document.getElementById(e);if(!n)return;const i=document.createElement("div");i.className="absolute z-50 bg-gray-800 text-white text-xs rounded p-2 max-w-xs",i.textContent=t;const s=n.getBoundingClientRect();i.style.top=s.top-40+"px",i.style.left=s.left+"px",document.body.appendChild(i),setTimeout((()=>{i.remove()}),3e3)}createRealTimePanel(){const e=document.createElement("div");e.id="ai-realtime-panel",e.className="fixed top-4 left-4 w-72 bg-white rounded-lg shadow-lg border z-40 transform -translate-x-full transition-all duration-300 opacity-0",e.innerHTML='\n            <div class="bg-gradient-to-r from-green-500 to-blue-600 text-white p-3 rounded-t-lg">\n                <div class="flex items-center justify-between">\n                    <div class="flex items-center">\n                        <div class="w-6 h-6 bg-white bg-opacity-20 rounded-full flex items-center justify-center mr-2">\n                            <span class="text-sm">⚡</span>\n                        </div>\n                        <div>\n                            <h3 class="font-semibold text-sm">Real-time Analysis</h3>\n                            <p class="text-xs opacity-90">Live AI insights</p>\n                        </div>\n                    </div>\n                    <button id="toggle-realtime-panel" class="text-white hover:text-gray-200">\n                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            \n            <div id="realtime-content" class="p-3 max-h-96 overflow-y-auto">\n                <div id="realtime-analysis-loading" class="hidden">\n                    <div class="flex items-center text-sm text-gray-600">\n                        <div class="animate-spin mr-2">⚡</div>\n                        <span>Analyzing...</span>\n                    </div>\n                </div>\n                \n                <div id="realtime-recommendations" class="space-y-2">\n                    <div class="text-sm text-gray-500">Start entering vehicle data to see real-time AI analysis</div>\n                </div>\n                \n                <div id="realtime-warnings" class="mt-3 space-y-2 hidden">\n                    <h4 class="text-sm font-semibold text-yellow-700">⚠️ Attention</h4>\n                </div>\n                \n                <div id="realtime-calculations" class="mt-3 hidden">\n                    <h4 class="text-sm font-semibold text-blue-700">🎯 Optimal Settings</h4>\n                    <div class="text-xs text-gray-600 mt-1">AI-calculated recommendations</div>\n                </div>\n            </div>\n        ',document.body.appendChild(e),this.realTimePanel=e,document.getElementById("toggle-realtime-panel").addEventListener("click",(()=>{this.toggleRealTimePanel()})),setTimeout((()=>{this.showRealTimePanel()}),2e3)}injectCSS(){const e=document.createElement("style");e.textContent="\n            .typing-dots {\n                display: flex;\n                align-items: center;\n            }\n            .typing-dots .dot {\n                width: 4px;\n                height: 4px;\n                border-radius: 50%;\n                background: #9ca3af;\n                margin: 0 1px;\n                animation: typing 1.4s infinite ease-in-out;\n            }\n            .typing-dots .dot:nth-child(1) { animation-delay: -0.32s; }\n            .typing-dots .dot:nth-child(2) { animation-delay: -0.16s; }\n            .typing-dots .dot:nth-child(3) { animation-delay: 0s; }\n            \n            @keyframes typing {\n                0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }\n                40% { transform: scale(1); opacity: 1; }\n            }\n            \n            .ai-input-suggestion {\n                position: absolute;\n                background: #f3f4f6;\n                border: 1px solid #d1d5db;\n                border-radius: 0.375rem;\n                padding: 0.5rem;\n                font-size: 0.75rem;\n                z-index: 1000;\n                max-width: 200px;\n                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n            }\n            \n            .ai-input-warning {\n                position: absolute;\n                background: #fef3c7;\n                border: 1px solid #f59e0b;\n                color: #92400e;\n                border-radius: 0.375rem;\n                padding: 0.5rem;\n                font-size: 0.75rem;\n                z-index: 1000;\n                max-width: 200px;\n                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n            }\n            \n            .realtime-recommendation {\n                background: linear-gradient(135deg, #e0f2fe 0%, #f3e5f5 100%);\n                border-left: 4px solid #2196f3;\n                padding: 0.75rem;\n                border-radius: 0.375rem;\n                margin-bottom: 0.5rem;\n                font-size: 0.8rem;\n                transition: all 0.3s ease;\n            }\n            \n            .realtime-recommendation:hover {\n                transform: translateY(-1px);\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n            }\n            \n            .calculation-result {\n                background: #f0f9ff;\n                border: 1px solid #0ea5e9;\n                border-radius: 0.375rem;\n                padding: 0.5rem;\n                margin: 0.25rem 0;\n                font-size: 0.75rem;\n            }\n            \n            .analysis-confidence {\n                display: inline-block;\n                padding: 0.125rem 0.375rem;\n                border-radius: 0.25rem;\n                font-size: 0.625rem;\n                font-weight: 600;\n            }\n            \n            .confidence-high { background: #dcfce7; color: #166534; }\n            .confidence-medium { background: #fef3c7; color: #92400e; }\n            .confidence-low { background: #fee2e2; color: #dc2626; }\n        ",document.head.appendChild(e)}gatherComprehensiveData(){return{inputData:{vehicleModel:document.getElementById("vehicle-model")?.value,year:document.getElementById("vehicle-year")?.value,controllerType:document.getElementById("controller-type")?.value,motorType:document.getElementById("motor-type")?.value,currentSpeed:parseInt(document.getElementById("current-speed")?.value)||null,accessories:this.getInstalledAccessories(),drivingMode:this.getCurrentDrivingMode(),motorCondition:this.getMotorCondition()},context:{location:this.getCurrentLocation(),coordinates:this.getCurrentCoordinates(),timestamp:new Date,page:window.location.pathname}}}getInputContext(e){return{formSection:this.getFormSection(e),relatedFields:this.getRelatedFields(e),validationRules:this.getValidationRules(e)}}getFormSection(e){const t=e.closest("[data-section]");return t?t.dataset.section:"unknown"}getRelatedFields(e){const t=e.closest("form")||document,n=[];return e.id?.includes("vehicle")&&n.push(...t.querySelectorAll('[id*="vehicle"]')),e.id?.includes("motor")&&n.push(...t.querySelectorAll('[id*="motor"]')),Array.from(n).map((e=>({id:e.id,value:e.value})))}getValidationRules(e){return{required:e.required,min:e.min,max:e.max,pattern:e.pattern,type:e.type}}async analyzeInputValue(e){const t={suggestions:[],warnings:[],confidence:.8};if("current-speed"===e.id){const n=parseInt(e.value);n>25?t.warnings.push("Speed >25 MPH may require special licensing"):n<10&&t.suggestions.push("Consider checking controller settings for low speed")}if("vehicle-year"===e.id){const n=parseInt(e.value);n>(new Date).getFullYear()?t.warnings.push("Future year detected - please verify"):n<1998&&t.suggestions.push("Older vehicles may have different controller options")}return t}showInputSuggestions(e,t){this.removeExistingTooltips(e);const n=document.createElement("div");n.className="ai-input-suggestion",n.innerHTML=t.join("<br>"),this.positionTooltip(n,e),document.body.appendChild(n),setTimeout((()=>n.remove()),5e3)}showInputWarnings(e,t){this.removeExistingTooltips(e);const n=document.createElement("div");n.className="ai-input-warning",n.innerHTML="⚠️ "+t.join("<br>⚠️ "),this.positionTooltip(n,e),document.body.appendChild(n),setTimeout((()=>n.remove()),7e3)}removeExistingTooltips(e){document.querySelectorAll(".ai-input-suggestion, .ai-input-warning").forEach((t=>{t.dataset.inputId===e.id&&t.remove()}))}positionTooltip(e,t){const n=t.getBoundingClientRect();e.style.position="fixed",e.style.top=n.bottom+5+"px",e.style.left=n.left+"px",e.dataset.inputId=t.id}updateRealTimePanel(e){const t=document.getElementById("realtime-recommendations");if(!t)return;const n=document.createElement("div");for(n.className="realtime-recommendation",n.innerHTML=`\n            <div class="flex items-center justify-between mb-1">\n                <span class="font-medium text-sm">💡 AI Insight</span>\n                <span class="analysis-confidence confidence-${this.getConfidenceLevel(e.confidence)}">\n                    ${Math.round(100*e.confidence)}%\n                </span>\n            </div>\n            <div class="text-xs text-gray-700">\n                ${e.suggestions.join(" • ")}\n            </div>\n        `,t.appendChild(n);t.children.length>4;)t.removeChild(t.firstChild)}updateRealTimePanelWithCalculations(e){const t=document.getElementById("realtime-calculations");if(!t||!e.settings)return;t.classList.remove("hidden");const n=Object.entries(e.settings).slice(0,3).map((([e,t])=>`F.${e}: ${t}`));t.innerHTML=`\n            <h4 class="text-sm font-semibold text-blue-700">🎯 Optimal Settings</h4>\n            <div class="text-xs text-gray-600 mt-1">AI-calculated recommendations</div>\n            <div class="mt-2 space-y-1">\n                ${n.map((e=>`\n                    <div class="calculation-result">${e}</div>\n                `)).join("")}\n            </div>\n            <div class="mt-2">\n                <span class="analysis-confidence confidence-${this.getConfidenceLevel(e.analysis?.confidence||.7)}">\n                    ${Math.round(100*(e.analysis?.confidence||.7))}% confidence\n                </span>\n            </div>\n        `}getConfidenceLevel(e){return e>=.8?"high":e>=.6?"medium":"low"}toggleRealTimePanel(){this.realTimePanel.classList.contains("-translate-x-full")?this.showRealTimePanel():this.hideRealTimePanel()}showRealTimePanel(){this.realTimePanel.classList.remove("-translate-x-full","opacity-0"),this.realTimePanel.classList.add("translate-x-0","opacity-100")}hideRealTimePanel(){this.realTimePanel.classList.add("-translate-x-full","opacity-0"),this.realTimePanel.classList.remove("translate-x-0","opacity-100")}showRealTimeAnalysisLoading(){document.getElementById("realtime-analysis-loading")?.classList.remove("hidden")}hideRealTimeAnalysisLoading(){document.getElementById("realtime-analysis-loading")?.classList.add("hidden")}observeFormChanges(){new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{if(1===e.nodeType){(e.querySelectorAll?e.querySelectorAll("input, select, textarea"):[]).forEach((e=>{e.classList.contains("no-ai-analysis")||(e.addEventListener("input",(()=>this.debouncedInputAnalysis(e))),e.addEventListener("change",(()=>this.debouncedInputAnalysis(e))))}))}}))}))})).observe(document.body,{childList:!0,subtree:!0})}onInputFocus(e){this.contextualHelp.has(e.id)&&this.showContextualHelp(e.id)}onInputBlur(e){setTimeout((()=>{this.hideContextualHelp()}),200)}dataIsSimilar(e,t){if(!e||!t)return!1;return JSON.stringify(e.inputData)===JSON.stringify(t.inputData)}handleCalculationUpdate(e){this.performComprehensiveAnalysis("calculation_update")}displayComprehensiveAnalysis(e,t){if(this.assistantPanel&&!this.assistantPanel.classList.contains("translate-y-full")){const n=this.generateAnalysisSummary(e,t);this.addChatMessage(n,"ai")}}generateAnalysisSummary(e,t){const n=e.analysis?.confidence||.7,i=Object.keys(e.settings||{}).length;let s=`🔍 Analysis complete (${Math.round(100*n)}% confidence)\n`;return s+=`📊 Calculated ${i} optimal settings\n`,e.analysis?.recommendations?.length>0&&(s+=`💡 Key recommendation: ${e.analysis.recommendations[0]}`),s}showIntelligentRecommendations(e,t){if(!e.analysis?.recommendations?.length)return;const n=e.analysis.recommendations[0];this.showNotification(`💡 AI Insight: ${n}`,"info")}showAnalysisError(e){this.showNotification(`❌ ${e}`,"error")}getCurrentCoordinates(){return navigator.geolocation?new Promise((e=>{navigator.geolocation.getCurrentPosition((t=>e({lat:t.coords.latitude,lon:t.coords.longitude})),(()=>e(null)))})):null}getMotorCondition(){return{age:document.getElementById("motor-age")?.value,condition:document.getElementById("motor-condition")?.value,hours:document.getElementById("motor-hours")?.value}}}document.addEventListener("DOMContentLoaded",(()=>{(window.location.pathname.includes("index.html")||window.location.pathname.includes("gem-optimizer")||window.location.pathname.includes("accessories-config.html")||window.location.pathname.includes("driving-modes.html")||"/"===window.location.pathname)&&(window.aiUI=new AIUIIntegration)})),"undefined"!=typeof module&&module.exports&&(module.exports=AIUIIntegration);