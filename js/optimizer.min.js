class GEMOptimizer{constructor(){this.factoryDefaults={1:22,2:0,3:20,4:255,5:255,6:60,7:59,8:241,9:221,10:180,11:122,12:149,13:0,14:3,15:72,16:63,17:0,18:0,19:12,20:40,21:40,22:122,23:10,24:43,25:1,26:3};for(let e=27;e<=128;e++)this.factoryDefaults[e]=0;this.functionDescriptions={1:"MPH Scaling",2:"Creep Speed",3:"Controlled Acceleration",4:"Max Armature Current Limit",5:"Plug Current",6:"Armature Acceleration Rate",7:"Minimum Field Current",8:"Maximum Field Current",9:"Regen Armature Current",10:"Regen Maximum Field Current",11:"Turf Speed Limit",12:"Reverse Speed Limit",14:"IR Compensation",15:"Battery Volts",16:"Low Battery Volts",19:"Field Ramp Rate Plug/Regen",20:"MPH Overspeed",21:"Arm Current Ramp",22:"Odometer Calibration",23:"Error Compensation",24:"Field Weakening Start",25:"Pedal Enable",26:"Ratio of Field to Arm"},this.vehicleParameters={e2:{weight:1200,passengers:2,gearRatio:8.91},e4:{weight:1350,passengers:4,gearRatio:8.91},eS:{weight:1250,passengers:2,gearRatio:8.91},eL:{weight:1400,passengers:2,gearRatio:8.91},e6:{weight:1500,passengers:6,gearRatio:8.91},elXD:{weight:1600,passengers:2,gearRatio:8.91}},this.safetyConstraints={1:{min:15,max:35},2:{min:0,max:10},3:{min:8,max:40},4:{min:180,max:255},5:{min:50,max:255},6:{min:30,max:100},7:{min:51,max:120},8:{min:200,max:255},9:{min:150,max:255},10:{min:51,max:255},11:{min:100,max:170},12:{min:120,max:170},14:{min:2,max:20},15:{min:48,max:96},16:{min:40,max:80},19:{min:5,max:30},20:{min:25,max:50},21:{min:20,max:80},22:{min:80,max:180},23:{min:0,max:20},24:{min:25,max:85},26:{min:1,max:8}}}optimizeSettings(e,t=null){try{if(!e||"object"!=typeof e)throw new Error("Invalid input data: must be object");if(!e.vehicle||!e.vehicle.model)throw new Error("Vehicle model is required");!t||Array.isArray(t)&&128===t.length||(console.warn("Invalid baseline settings format, using factory defaults"),t=null);const a={...t||this.factoryDefaults};let i;try{i=this.analyzeConfiguration(e)}catch(e){console.error("Configuration analysis failed:",e),i=this.getDefaultAnalysisData()}const r=[{func:"optimizeTireSettings",name:"tire settings"},{func:"optimizeBatterySettings",name:"battery settings"},{func:"optimizeMotorProtection",name:"motor protection"},{func:"optimizeTerrainSettings",name:"terrain settings"},{func:"optimizePerformanceSettings",name:"performance settings"},{func:"optimizeCreepSpeed",name:"creep speed"},{func:"optimizePlugCurrent",name:"plug current"},{func:"optimizeFieldRampRate",name:"field ramp rate"},{func:"optimizeArmCurrentRamp",name:"armature current ramp"},{func:"optimizeErrorCompensation",name:"error compensation"}];for(const t of r)try{this[t.func](a,e,i)}catch(e){console.warn(`${t.name} optimization failed:`,e)}try{this.applySafetyConstraints(a)}catch(e){console.error("Safety constraints application failed:",e),this.applyEmergencySafetyDefaults(a)}let n;try{n=this.calculatePerformanceChanges(a,this.factoryDefaults,e,i)}catch(e){console.error("Performance calculation failed:",e),n=this.getDefaultPerformanceChanges()}return{success:!0,factorySettings:this.factoryDefaults,baselineSettings:t||this.factoryDefaults,isUsingImportedBaseline:null!==t,optimizedSettings:a,performanceChanges:n,analysisData:i,inputData:e,warnings:this.getOptimizationWarnings(a,e)}}catch(a){return console.error("Optimization failed:",a),this.getEmergencyFallback(e,t,a)}}analyzeConfiguration(e){const t=this.vehicleParameters[e.vehicle.model]||this.vehicleParameters.e4;return{vehicleWeight:t.weight,gearRatio:this.parseGearRatio(e.wheel.gearRatio)||t.gearRatio,tireSizeRatio:parseFloat(e.wheel.tireDiameter)/22||1,batteryVoltage:parseInt(e.battery.voltage)||72,batteryCapacity:parseInt(e.battery.capacity)||105,isLithium:"lithium"===e.battery.type,motorRisk:this.assessMotorRisk(e.vehicle.motorCondition),terrainDifficulty:this.assessTerrainDifficulty(e.environment.terrain),loadFactor:this.calculateLoadFactor(e.environment.vehicleLoad,t),temperatureFactor:this.calculateTemperatureFactor(e.environment.temperatureRange),priorityWeights:this.calculatePriorityWeights(e.priorities)}}assessMotorRisk(e){switch(e){case"sparking":return 1;case"fair":return.5;default:return 0}}assessTerrainDifficulty(e){switch(e){case"steep":return 1;case"moderate":return.6;case"mixed":return.4;default:return.1}}calculateLoadFactor(e,t){t.weight;switch(e){case"max":return 2;case"heavy":return 1.75;case"medium":return 1.4;default:return 1}}calculateTemperatureFactor(e){switch(e){case"extreme":return 1;case"hot":return.8;case"cold":return.7;default:return.3}}calculatePriorityWeights(e){return e?{range:e.range/10||.5,speed:e.speed/10||.5,acceleration:e.acceleration/10||.5,hillClimbing:e.hillClimbing/10||.5,regen:e.regen/10||.5}:{range:.5,speed:.5,acceleration:.5,hillClimbing:.5,regen:.5}}parseGearRatio(e){if(!e)return null;const t=e.match(/^([\d.]+):1$/);return t?parseFloat(t[1]):parseFloat(e)}optimizeTireSettings(e,t,a){const{tireSizeRatio:i,gearRatio:r}=a,n=8.91/r;e[1]=Math.round(this.factoryDefaults[1]*i*n),e[22]=Math.round(this.factoryDefaults[22]*i),i>1.1||r<8?e[7]=Math.min(Math.round(1.2*e[7]),this.safetyConstraints[7].max):r>10&&(e[7]=Math.max(Math.round(.9*e[7]),this.safetyConstraints[7].min),e[3]=Math.max(Math.round(.85*e[3]),this.safetyConstraints[3].min));i*n<.9&&(e[20]=Math.max(Math.round(.8*e[20]),this.safetyConstraints[20].min))}optimizeBatterySettings(e,t,a){const{batteryVoltage:i,isLithium:r,batteryCapacity:n}=a;if(e[15]=i,r){const t={48:42,60:52,72:63,82:72,96:84};e[16]=t[i]||63}else e[16]=Math.round(.875*i);r?(e[14]=7,e[9]=Math.min(Math.round(1.1*e[9]),this.safetyConstraints[9].max),e[10]=Math.min(Math.round(1.15*e[10]),this.safetyConstraints[10].max)):n>150?e[14]=Math.max(e[14]-1,2):n<100&&(e[14]=Math.min(e[14]+1,8));const o=n/105;e[5]=Math.round(e[5]*Math.min(o,1.2))}optimizeMotorProtection(e,t,a){const{motorRisk:i}=a;if(i>0){const t=1+.5*i;e[7]=Math.min(Math.round(e[7]*t),this.safetyConstraints[7].max),e[24]=Math.min(Math.round(e[24]*t),this.safetyConstraints[24].max),e[20]=Math.max(Math.round(e[20]/t),this.safetyConstraints[20].min),e[23]=Math.max(Math.round(e[23]/2),this.safetyConstraints[23].min)}}optimizeTerrainSettings(e,t,a){const{terrainDifficulty:i,loadFactor:r}=a;if(i>.5||r>1.4){e[3]=Math.max(Math.round(e[3]*(1-.2*i)),this.safetyConstraints[3].min),e[4]=this.factoryDefaults[4],e[9]=Math.min(Math.round(e[9]*(1+.1*i)),this.safetyConstraints[9].max),e[26]=Math.min(e[26]+Math.round(i),this.safetyConstraints[26].max)}}optimizePerformanceSettings(e,t,a){const{priorityWeights:i}=a;i.speed>.7&&(e[7]=Math.round(.9*e[7]),e[11]=Math.min(Math.round(1.1*e[11]),this.safetyConstraints[11].max)),i.acceleration>.7&&(e[3]=Math.max(Math.round(.8*e[3]),this.safetyConstraints[3].min),e[6]=Math.max(Math.round(.85*e[6]),this.safetyConstraints[6].min)),i.range>.7&&(e[3]=Math.min(Math.round(1.2*e[3]),this.safetyConstraints[3].max),e[4]=Math.round(.95*e[4])),i.regen>.7&&(e[9]=Math.min(Math.round(1.15*e[9]),this.safetyConstraints[9].max),e[10]=Math.min(Math.round(1.2*e[10]),this.safetyConstraints[10].max),e[19]=Math.max(Math.round(.7*e[19]),this.safetyConstraints[19].min))}optimizeCreepSpeed(e,t,a){const{terrainDifficulty:i,loadFactor:r,priorityWeights:n}=a;i>.7||"steep"===t.environment.terrain?e[2]=5:n.range>.7?e[2]=0:e[2]=r>1.5?3:2,e[2]=Math.max(this.safetyConstraints[2].min,Math.min(e[2],this.safetyConstraints[2].max))}optimizePlugCurrent(e,t,a){const{batteryCapacity:i,isLithium:r,terrainDifficulty:n}=a,o=i/105;e[5]=r?Math.round(220*o):Math.round(180*Math.min(o,1.1)),n>.6&&(e[5]=Math.round(1.1*e[5])),e[5]=Math.max(this.safetyConstraints[5].min,Math.min(e[5],this.safetyConstraints[5].max))}optimizeFieldRampRate(e,t,a){const{motorRisk:i,priorityWeights:r,temperatureFactor:n}=a;i>.7?e[19]=18:r.acceleration>.7?e[19]=8:r.range>.7?e[19]=14:e[19]=12,n>.8&&(e[19]=Math.round(1.2*e[19])),e[19]=Math.max(this.safetyConstraints[19].min,Math.min(e[19],this.safetyConstraints[19].max))}optimizeArmCurrentRamp(e,t,a){const{loadFactor:i,motorRisk:r,priorityWeights:n}=a;r>.5?e[21]=60:i>1.6?e[21]=50:n.acceleration>.8?e[21]=30:e[21]=40,e[21]=Math.max(this.safetyConstraints[21].min,Math.min(e[21],this.safetyConstraints[21].max))}optimizeErrorCompensation(e,t,a){const{motorRisk:i,batteryVoltage:r,temperatureFactor:n}=a;i>.7||n>.8?e[23]=5:r>=82?e[23]=12:"e2"===t.vehicle.model||"eS"===t.vehicle.model?e[23]=10:e[23]=15,e[23]=Math.max(this.safetyConstraints[23].min,Math.min(e[23],this.safetyConstraints[23].max))}applySafetyConstraints(e){Object.keys(e).forEach((t=>{const a=this.safetyConstraints[t];a&&(e[t]=Math.max(a.min,Math.min(e[t],a.max)))}))}calculatePerformanceChanges(e,t,a,i){const r=[],n=this.calculateSpeedChange(e,t,i);n>5?r.push(`Top speed increased by approximately ${n}%`):n<-5&&r.push(`Top speed reduced by approximately ${Math.abs(n)}% for motor protection`);const o=this.calculateAccelerationChange(e,t);o>10?r.push(`Acceleration improved by approximately ${o}%`):o<-10&&r.push(`Acceleration smoothed by approximately ${Math.abs(o)}% for better control`);const s=this.calculateHillClimbingChange(e,t);s>5&&r.push(`Hill climbing ability improved by approximately ${s}%`);const c=this.calculateRangeChange(e,t,i);c>5?r.push(`Range improved by approximately ${c}%`):c<-5&&r.push("Range slightly reduced in favor of performance");const m=this.calculateMotorProtectionChange(e,t);m>20?r.push("Motor protection significantly improved, reducing risk of brush wear and sparking"):m>5&&r.push("Motor protection improved, may extend motor life");const l=this.calculateRegenChange(e,t);if(l>10&&r.push(`Regenerative braking strength increased by approximately ${l}%`),e[2]!==t[2]&&(e[2]>0?r.push("Creep speed enabled for easier parking and hill starts"):r.push("Creep speed disabled for maximum efficiency")),e[5]!==t[5]){const a=Math.round((e[5]-t[5])/t[5]*100);Math.abs(a)>10&&r.push(`Plug braking ${a>0?"strengthened":"reduced"} by ${Math.abs(a)}% for ${a>0?"better control":"battery protection"}`)}if(e[19]!==t[19]){const a=t[19]-e[19];a>2?r.push("Field response quickened for snappier acceleration"):a<-2&&r.push("Field response smoothed for motor protection")}if(e[21]!==t[21]){const a=t[21]-e[21];a>5?r.push("Armature response improved for better acceleration feel"):a<-5&&r.push("Armature response gentled for smoother operation")}if(e[23]!==t[23]){const a=e[23]-t[23];Math.abs(a)>3&&r.push(`Error detection ${a<0?"sensitivity increased":"tolerance improved"} for ${a<0?"enhanced protection":"reduced nuisance trips"}`)}return i.isLithium&&e[14]!==t[14]&&r.push("Battery compensation optimized for lithium chemistry"),e[16]!==t[16]&&r.push(`Low battery cutoff adjusted to protect ${i.isLithium?"lithium":"lead-acid"} battery pack`),r}calculateSpeedChange(e,t,a){const i=t[7]/e[7]-1,r=a.tireSizeRatio-1;return Math.round(100*(i+r))}calculateAccelerationChange(e,t){const a=t[3]/e[3];return Math.round(100*(a-1))}calculateHillClimbingChange(e,t){const a=e[4]/t[4]-1,i=e[26]/t[26]-1;return Math.round(100*(a+.5*i))}calculateRangeChange(e,t,a){const i=t[3]/e[3]-1,r=t[4]/e[4]-1,n=a.isLithium?.15:0;return Math.round(100*(50*-i-30*r+n))}calculateMotorProtectionChange(e,t){const a=e[7]/t[7]-1,i=e[24]/t[24]-1;return Math.round(100*(a+i))}calculateRegenChange(e,t){const a=e[9]/t[9]-1,i=e[10]/t[10]-1;return Math.round(50*(a+i))}getFactoryDefaults(){return this.factoryDefaults}getFunctionDescriptions(){return this.functionDescriptions}optimizeByMode(e,t,a={}){const i={performance:{speed:10,acceleration:8,hillClimbing:6,range:2,regen:3},efficiency:{speed:3,acceleration:3,hillClimbing:5,range:10,regen:8},balanced:{speed:5,acceleration:5,hillClimbing:5,range:5,regen:5},commute:{speed:4,acceleration:3,hillClimbing:4,range:8,regen:7},weekend:{speed:6,acceleration:5,hillClimbing:7,range:6,regen:5}},r=i[t]||i.balanced,n={vehicle:{model:a.model||"e4",motorCondition:a.motorCondition||"good"},battery:{type:a.batteryType?.includes("lithium")?"lithium":"lead",voltage:a.batteryVoltage||72,capacity:a.batteryCapacity||150,age:a.batteryAge||"good"},wheel:{tireDiameter:a.tireDiameter||22,gearRatio:a.gearRatio||8.91},environment:{terrain:a.terrain||"mixed",vehicleLoad:a.vehicleLoad||"medium",temperatureRange:a.temperatureRange||"mild",hillGrade:a.hillGrade||10},priorities:r};return this.optimizeSettings(n,e)}getDefaultAnalysisData(){return{vehicleCharacteristics:{type:"e4",motor:"ac",battery:"lead",drivetrain:"standard"},performanceWeights:{speed:5,range:5,acceleration:5,efficiency:5,hills:5},environmentalFactors:{terrain:"mixed",temperature:"mild",load:"medium"}}}applyEmergencySafetyDefaults(e){e[1]=Math.min(e[1]||22,20),e[4]=Math.min(e[4]||245,200),e[6]=Math.min(e[6]||60,40),e[24]=Math.min(e[24]||43,35),console.warn("Emergency safety defaults applied due to constraint validation failure")}getDefaultPerformanceChanges(){return{speed:{value:0,unit:"mph",description:"No change calculated"},range:{value:0,unit:"miles",description:"No change calculated"},acceleration:{value:0,unit:"seconds",description:"No change calculated"},efficiency:{value:0,unit:"%",description:"No change calculated"},hillClimbing:{value:0,unit:"%",description:"No change calculated"}}}getOptimizationWarnings(e,t){const a=[];return e[1]>25&&a.push("Speed setting may exceed legal limits for some areas"),e[4]>300&&a.push("High motor current - monitor temperature closely"),e[24]>50&&a.push("High field weakening - ensure adequate motor cooling"),"worn"===t.vehicle?.motorCondition&&a.push("Motor condition is worn - consider more conservative settings"),a}getEmergencyFallback(e,t,a){return console.error("Using emergency fallback optimization due to error:",a),{success:!1,error:SharedUtils.formatUserError(a,"Optimization"),factorySettings:this.factoryDefaults,baselineSettings:t||this.factoryDefaults,isUsingImportedBaseline:null!==t,optimizedSettings:t||this.factoryDefaults,performanceChanges:this.getDefaultPerformanceChanges(),analysisData:this.getDefaultAnalysisData(),inputData:e||{},warnings:["Emergency fallback used - settings may not be optimized"],emergencyFallback:!0}}}"undefined"!=typeof module&&module.exports?module.exports=GEMOptimizer:"undefined"!=typeof window&&(window.GEMOptimizer=GEMOptimizer);