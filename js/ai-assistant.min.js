class AIAssistant{constructor(){this.vehicleDatabase=new VehicleDatabase,this.pdfAnalyzer="undefined"!=typeof EnhancedPDFAnalyzer?new EnhancedPDFAnalyzer:new PDFAnalyzer,this.usageAnalyzer=new UsagePatternAnalyzer,this.recommendationEngine=new RecommendationEngine,this.learningModel=new LocalLearningModel,this.isInitialized=!1,this.context={vehicle:null,accessories:[],usage:{},environment:{},history:[]},this.init()}async init(){try{await Promise.all([this.vehicleDatabase.load(),this.learningModel.initialize(),this.loadUserContext()]),this.isInitialized=!0,console.log("AI Assistant initialized successfully")}catch(e){console.error("AI Assistant initialization failed:",e)}}async autoFillVehicleFields(e){this.isInitialized||await this.init();const t={...e};try{if(e.model&&e.year){const i=await this.vehicleDatabase.getFactorySpecs(e.model,e.year);if(i)return t.controller=t.controller||i.controller,t.motorType=t.motorType||i.motorType,t.motorPower=t.motorPower||i.motorPower,t.currentSpeed=t.currentSpeed||i.topSpeed,t.batteryType=t.batteryType||i.batteryType,t.weight=t.weight||i.weight,{success:!0,data:t,source:"factory_specs",confidence:.95,message:`Auto-filled from factory specifications for ${e.model} ${e.year}`}}const i=await this.vehicleDatabase.findSimilarVehicles(e);if(i.length>0){const a=i[0],n=this.calculateSimilarityConfidence(e,a);return t.controller=t.controller||a.controller,t.motorType=t.motorType||a.motorType,t.motorPower=t.motorPower||a.motorPower,t.currentSpeed=t.currentSpeed||a.topSpeed,{success:!0,data:t,source:"similar_vehicle",confidence:n,message:`Auto-filled based on similar ${a.model} ${a.year} (${Math.round(100*n)}% confidence)`,similarVehicle:a}}const a=await this.learningModel.predictMissingFields(e);return a?(Object.keys(a).forEach((e=>{!t[e]&&a[e].confidence>.7&&(t[e]=a[e].value)})),{success:!0,data:t,source:"ai_prediction",confidence:a.overallConfidence,message:"Auto-filled using AI predictions based on typical configurations"}):{success:!1,data:t,message:"Insufficient data for auto-fill. Please provide more vehicle details."}}catch(e){return console.error("Auto-fill error:",e),{success:!1,data:t,error:e.message}}}async analyzePDF(e){this.isInitialized||await this.init();try{if(this.pdfAnalyzer.analyzePDF){const t=await this.pdfAnalyzer.analyzePDF(e);if(t.success)return await this.learningModel.learnFromPDF(t.metadata.format,t.settings),{success:!0,format:t.metadata.format,settings:t.settings,analysis:t.analysis,confidence:t.metadata.confidence,metadata:t.metadata,message:`Successfully extracted ${Object.keys(t.settings).length} controller settings with ${Math.round(100*t.metadata.confidence)}% confidence`}}const t=await this.pdfAnalyzer.extractText(e),i=await this.pdfAnalyzer.detectFormat(t),a=await this.pdfAnalyzer.extractControllerSettings(t,i),n=await this.validateExtractedSettings(a),s=await this.analyzeExtractedSettings(n);return await this.learningModel.learnFromPDF(i,a),{success:!0,format:i,settings:n,analysis:s,confidence:i.confidence,message:`Successfully extracted ${Object.keys(n).length} controller settings`}}catch(e){return console.error("PDF analysis error:",e),{success:!1,error:e.message,message:"Failed to analyze PDF. Please ensure it contains GEM controller settings."}}}async getUsageBasedRecommendations(e,t=[]){this.isInitialized||await this.init();try{const i=await this.usageAnalyzer.analyzePatterns(t),a={accessories:await this.recommendAccessories(e,i),drivingModes:await this.recommendDrivingModes(i),settings:await this.recommendControllerSettings(e,i),maintenance:await this.recommendMaintenance(e,i),efficiency:await this.recommendEfficiencyImprovements(e,i)},n=await this.prioritizeRecommendations(a,e);return{success:!0,recommendations:n,patterns:i,confidence:i.confidence,message:`Generated ${n.length} personalized recommendations`}}catch(e){return console.error("Usage analysis error:",e),{success:!1,error:e.message,message:"Unable to analyze usage patterns for recommendations"}}}async suggestOptimalSettings(e){this.isInitialized||await this.init();const{vehicleData:t,accessories:i,conditions:a,drivingMode:n}=e;try{const s=await this.calculateBaseSettings(t),r=await this.calculateAccessoryAdjustments(i),o=await this.calculateEnvironmentalAdjustments(a),c=await this.calculateModeAdjustments(n),l=await this.combineAdjustments({base:s,accessories:r,environmental:o,mode:c}),d=await this.validateOptimalSettings(l,t);return{success:!0,settings:d,explanations:await this.generateSettingsExplanations(d,e),adjustments:{accessories:r,environmental:o,mode:c},confidence:this.calculateSettingsConfidence(d,e),message:"Optimal settings calculated based on current configuration"}}catch(e){return console.error("Settings calculation error:",e),{success:!1,error:e.message,message:"Unable to calculate optimal settings"}}}async getRealTimeAssistance(e,t={}){this.isInitialized||await this.init();try{this.updateContext(t);const i=await this.classifyAssistanceType(e);let a;switch(i.type){case"vehicle_identification":a=await this.assistVehicleIdentification(e,t);break;case"settings_explanation":a=await this.explainSettings(e,t);break;case"troubleshooting":a=await this.provideTroubleshooting(e,t);break;case"optimization_advice":a=await this.provideOptimizationAdvice(e,t);break;case"safety_check":a=await this.performSafetyCheck(e,t);break;case"accessory_guidance":a=await this.provideAccessoryGuidance(e,t);break;default:a=await this.provideGeneralAssistance(e,t)}return await this.learningModel.learnFromInteraction(e,a,t),{success:!0,response:a,type:i.type,confidence:i.confidence,suggestions:await this.getFollowUpSuggestions(a,t)}}catch(e){return console.error("Real-time assistance error:",e),{success:!1,error:e.message,response:{message:"I'm having trouble processing your request. Please try rephrasing or check your connection.",suggestions:["Try a more specific question","Check vehicle information is complete","Contact support if issue persists"]}}}}async validateExtractedSettings(e){const t={},i={1:{min:50,max:150,name:"MPH Scaling"},3:{min:5,max:50,name:"Acceleration Pot Gain"},4:{min:100,max:350,name:"Max Armature Current"},6:{min:10,max:100,name:"Acceleration Rate"},7:{min:10,max:100,name:"Deceleration Rate"},8:{min:100,max:350,name:"Max Field Current"},9:{min:50,max:300,name:"Regen Current"},10:{min:50,max:150,name:"Map Select"},11:{min:5,max:40,name:"Turf Mode"},12:{min:3,max:12,name:"Motor Temp Limit"},20:{min:1,max:15,name:"MPH Overspeed"}};return Object.entries(e).forEach((([e,a])=>{const n=parseInt(e),s=i[n];s&&"number"==typeof a&&(a>=s.min&&a<=s.max?t[n]=a:console.warn(`Invalid value for F.${n} (${s.name}): ${a}. Expected ${s.min}-${s.max}`))})),t}async analyzeExtractedSettings(e){const t={profile:"unknown",modifications:[],warnings:[],insights:[]},i=await this.determineOptimizationProfile(e);t.profile=i.type,t.insights.push(i.description);const a=await this.detectModifications(e);t.modifications=a;const n=await this.performSettingsSafetyCheck(e);t.warnings=n.warnings;const s=await this.estimatePerformance(e);return t.estimatedTopSpeed=s.topSpeed,t.estimatedRange=s.range,t.insights.push(`Estimated top speed: ${s.topSpeed} MPH`),t.insights.push(`Estimated range impact: ${s.rangeImpact}%`),t}calculateSimilarityConfidence(e,t){let i=0;if(e.model===t.model?i+=.4:e.model&&t.model&&e.model.charAt(0)===t.model.charAt(0)&&(i+=.2),e.year===t.year)i+=.3;else if(e.year&&t.year){const a=Math.abs(this.parseYear(e.year)-this.parseYear(t.year));a<=2?i+=.2:a<=5&&(i+=.1)}return e.controller===t.controller&&(i+=.2),e.motorType===t.motorType&&(i+=.1),Math.min(i/4,1)}parseYear(e){if("number"==typeof e)return e;if(e.includes("-")){const[t,i]=e.split("-").map((e=>parseInt(e)));return Math.round((t+i)/2)}return e.includes("+")?parseInt(e.replace("+",""))+2:e.startsWith("pre-")?parseInt(e.replace("pre-",""))-2:parseInt(e)||2010}updateContext(e){this.context={...this.context,...e,lastUpdated:new Date}}async classifyAssistanceType(e){let t={type:"general",confidence:0};return Object.entries({vehicle_identification:[/what.*model/i,/which.*controller/i,/identify.*vehicle/i,/motor.*type/i,/year.*gem/i,/specs.*for/i],settings_explanation:[/what.*does.*f\./i,/explain.*setting/i,/function.*\d+/i,/what.*is.*acceleration/i,/current.*setting/i],troubleshooting:[/problem.*with/i,/not.*working/i,/error/i,/issue/i,/slow.*acceleration/i,/battery.*drain/i,/overheating/i],optimization_advice:[/optimize.*for/i,/best.*settings/i,/improve.*performance/i,/increase.*speed/i,/better.*range/i,/efficiency/i],safety_check:[/safe.*to/i,/dangerous/i,/risk/i,/warning/i,/temperature.*high/i,/current.*too/i],accessory_guidance:[/accessory/i,/install.*light/i,/lift.*kit/i,/sound.*system/i,/recommend.*accessories/i,/power.*draw/i]}).forEach((([i,a])=>{const n=a.filter((t=>t.test(e))).length/a.length;n>t.confidence&&(t={type:i,confidence:n})})),t}async loadUserContext(){try{const e=localStorage.getItem("ai-assistant-context");e&&(this.context={...this.context,...JSON.parse(e)})}catch(e){console.warn("Could not load AI context:",e)}}async saveUserContext(){try{localStorage.setItem("ai-assistant-context",JSON.stringify(this.context))}catch(e){console.warn("Could not save AI context:",e)}}getCapabilities(){return{autoFill:{enabled:this.isInitialized,features:["Factory specs lookup","Similar vehicle matching","AI predictions"]},pdfAnalysis:{enabled:this.isInitialized,formats:["Sentry exports","Optimization reports","Settings comparisons"]},recommendations:{enabled:this.isInitialized,types:["Accessories","Driving modes","Settings","Maintenance","Efficiency"]},realTimeAssistance:{enabled:this.isInitialized,categories:["Identification","Troubleshooting","Optimization","Safety","Guidance"]}}}}class VehicleDatabase{constructor(){this.factorySpecs=new Map,this.similarityIndex=new Map,this.loaded=!1}async load(){this.factorySpecs=new Map([["e2-2016+",{model:"e2",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:3.5,topSpeed:25,batteryType:"72V",weight:1100,defaultSettings:{1:100,3:15,4:245,6:60,7:70,8:245,9:225,10:100,11:11,12:7,20:5}}],["e2-2010-2015",{model:"e2",year:"2010-2015",controller:"T2",motorType:"dc-stock",motorPower:3.5,topSpeed:25,batteryType:"72V",weight:1090,defaultSettings:{1:100,3:15,4:235,6:55,7:65,8:235,9:215,10:95,11:11,12:7,20:5}}],["e4-2016+",{model:"e4",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1250,defaultSettings:{1:100,3:15,4:265,6:65,7:75,8:265,9:245,10:105,11:11,12:7,20:5}}],["e4-2010-2015",{model:"e4",year:"2010-2015",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1240,defaultSettings:{1:100,3:15,4:255,6:60,7:70,8:255,9:235,10:100,11:11,12:7,20:5}}],["e6-2016+",{model:"e6",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1350,defaultSettings:{1:100,3:15,4:275,6:70,7:80,8:275,9:255,10:110,11:11,12:7,20:5}}],["eS-2016+",{model:"eS",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1180,defaultSettings:{1:100,3:15,4:255,6:65,7:75,8:255,9:235,10:105,11:11,12:7,20:5}}],["eL-2016+",{model:"eL",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1280,defaultSettings:{1:100,3:15,4:265,6:65,7:75,8:265,9:245,10:105,11:11,12:7,20:5}}],["eM-2016+",{model:"eM",year:"2016+",controller:"T2",motorType:"dc-stock",motorPower:5,topSpeed:25,batteryType:"72V",weight:1200,defaultSettings:{1:100,3:15,4:260,6:65,7:75,8:260,9:240,10:105,11:11,12:7,20:5}}],["elXD-2016+",{model:"elXD",year:"2016+",controller:"T2",motorType:"dc-upgrade",motorPower:7,topSpeed:25,batteryType:"72V",weight:1400,defaultSettings:{1:100,3:15,4:285,6:70,7:80,8:285,9:265,10:115,11:11,12:8,20:5}}]]),this.loaded=!0}async getFactorySpecs(e,t){const i=`${e}-${t}`;return this.factorySpecs.get(i)}async findSimilarVehicles(e){const t=[];return this.factorySpecs.forEach(((i,a)=>{let n=0;e.model===i.model?n+=.5:e.model&&i.model.charAt(0)===e.model.charAt(0)&&(n+=.2),e.year===i.year&&(n+=.3),e.controller===i.controller&&(n+=.1),e.motorType===i.motorType&&(n+=.1),n>.3&&t.push({...i,similarity:n})})),t.sort(((e,t)=>t.similarity-e.similarity))}}class PDFAnalyzer{constructor(){this.formatPatterns={sentry:{patterns:[/F\.(\d+)\s*[:=]\s*(\d+)/gi,/Function\s+(\d+)\s*[:=]\s*(\d+)/gi,/F(\d+)\s+(\d+)/gi],confidence:.9},optimization:{patterns:[/Original\s*[:=]?\s*(\d+)\s*Optimized\s*[:=]?\s*(\d+)/gi,/Before\s*[:=]?\s*(\d+)\s*After\s*[:=]?\s*(\d+)/gi],confidence:.8},table:{patterns:[/(\d+)\s+([A-Za-z\s]+?)\s+(\d+)/gi,/F\.?(\d+)\s+(.+?)\s+(\d+)/gi],confidence:.7}}}async extractText(e){return new Promise(((t,i)=>{const a=new FileReader;a.onload=async function(e){try{const i=new Uint8Array(e.target.result),a=await pdfjsLib.getDocument(i).promise;let n="";for(let e=1;e<=a.numPages;e++){const t=await a.getPage(e),i=await t.getTextContent();n+=i.items.map((e=>e.str)).join(" ")+"\n"}t(n)}catch(e){i(e)}},a.onerror=i,a.readAsArrayBuffer(e)}))}async detectFormat(e){let t={type:"unknown",confidence:0};return Object.entries(this.formatPatterns).forEach((([i,a])=>{let n=0,s=a.patterns.length;a.patterns.forEach((t=>{const i=e.match(t);i&&i.length>0&&n++}));const r=n/s*a.confidence;r>t.confidence&&(t={type:i,confidence:r})})),t}async extractControllerSettings(e,t){const i={};switch(t.type){case"sentry":this.extractSentryFormat(e,i);break;case"optimization":this.extractOptimizationFormat(e,i);break;case"table":this.extractTableFormat(e,i);break;default:this.extractGenericFormat(e,i)}return i}extractSentryFormat(e,t){[/F\.?(\d+)\s*[:=]\s*(\d+)/gi,/Function\s+(\d+)\s*[:=]\s*(\d+)/gi].forEach((i=>{let a;for(;null!==(a=i.exec(e));){const e=parseInt(a[1]),i=parseInt(a[2]);e>=1&&e<=26&&i>=0&&i<=1e3&&(t[e]=i)}}))}extractOptimizationFormat(e,t){const i=/F\.?(\d+).*?Original\s*[:=]?\s*(\d+)\s*Optimized\s*[:=]?\s*(\d+)/gi;let a;for(;null!==(a=i.exec(e));){const e=parseInt(a[1]),i=parseInt(a[3]);e>=1&&e<=26&&i>=0&&i<=1e3&&(t[e]=i)}}extractTableFormat(e,t){e.split("\n").forEach((e=>{const i=e.match(/F?\.?(\d+)\s+.+?\s+(\d+)$/);if(i){const e=parseInt(i[1]),a=parseInt(i[2]);e>=1&&e<=26&&a>=0&&a<=1e3&&(t[e]=a)}}))}extractGenericFormat(e,t){[/(\d+)\s*[:=]\s*(\d+)/g,/F(\d+)\s+(\d+)/g,/Function\s*(\d+)\s*(\d+)/g].forEach((i=>{let a;for(;null!==(a=i.exec(e));){const e=parseInt(a[1]),i=parseInt(a[2]);e>=1&&e<=26&&i>=0&&i<=1e3&&(t[e]=i)}}))}}class UsagePatternAnalyzer{async analyzePatterns(e){return{drivingFrequency:this.analyzeDrivingFrequency(e),timeOfUse:this.analyzeTimeOfUse(e),terrainTypes:this.analyzeTerrainTypes(e),weatherConditions:this.analyzeWeatherConditions(e),modePreferences:this.analyzeModePreferences(e),confidence:.8}}analyzeDrivingFrequency(e){if(!e.length)return{frequency:"unknown",pattern:"insufficient_data"};const t=new Set(e.map((e=>e.date?.split("T")[0]))).size/Math.max(1,(new Date-new Date(e[0].date))/864e5);return t>.8?{frequency:"daily",pattern:"regular_commuter"}:t>.3?{frequency:"frequent",pattern:"regular_user"}:t>.1?{frequency:"occasional",pattern:"weekend_user"}:{frequency:"rare",pattern:"infrequent_user"}}analyzeTimeOfUse(e){const t={};e.forEach((e=>{if(e.timestamp){const i=new Date(e.timestamp).getHours();t[i]=(t[i]||0)+1}}));const i=Object.keys(t).reduce(((e,i)=>t[e]>t[i]?e:i),"12"),a=parseInt(i);return a>=6&&a<=9?{pattern:"morning_commute",peak:a}:a>=17&&a<=19?{pattern:"evening_commute",peak:a}:a>=10&&a<=16?{pattern:"daytime_use",peak:a}:a>=20||a<=5?{pattern:"night_use",peak:a}:{pattern:"varied",peak:a}}analyzeModePreferences(e){const t={};e.forEach((e=>{e.mode&&(t[e.mode]=(t[e.mode]||0)+1)}));return{preferred:Object.entries(t).sort((([,e],[,t])=>t-e)).slice(0,3).map((([e,t])=>({mode:e,count:t}))),variety:Object.keys(t).length}}analyzeTerrainTypes(e){return{primary:"mixed",variety:"moderate"}}analyzeWeatherConditions(e){return{primary:"clear",seasonal:!0}}}class RecommendationEngine{async generateRecommendations(e,t,i){const a=[];await this.analyzeCurrentConfiguration(e,i);return"daily"===t.drivingFrequency.frequency&&a.push({type:"accessory",item:"climateControl",priority:"high",reason:"Daily use detected - comfort accessories recommended",impact:{comfort:"high",range:"medium"}}),"night_use"===t.timeOfUse.pattern&&a.push({type:"accessory",item:"ledLights",variant:"premium",priority:"high",reason:"Night driving detected - enhanced lighting recommended",impact:{safety:"high",power:"medium"}}),t.modePreferences.variety<2&&a.push({type:"mode",item:"explore_modes",priority:"medium",reason:"Try different driving modes for varied conditions",impact:{versatility:"high",experience:"high"}}),a}async analyzeCurrentConfiguration(e,t){return{optimization_level:"factory",accessory_coverage:t.length/10,customization_level:"basic"}}}class LocalLearningModel{constructor(){this.patterns=new Map,this.interactions=[],this.initialized=!1}async initialize(){try{const e=localStorage.getItem("ai-learning-model");if(e){const t=JSON.parse(e);this.patterns=new Map(t.patterns),this.interactions=t.interactions||[]}this.initialized=!0}catch(e){console.warn("Could not load learning model:",e),this.initialized=!0}}async predictMissingFields(e){if(!this.initialized)return null;const t={};let i=0;if(e.model){const i=this.patterns.get(`model_${e.model}`);i&&(!e.controller&&i.controller&&(t.controller={value:i.controller,confidence:i.controllerConfidence||.8}),!e.motorType&&i.motorType&&(t.motorType={value:i.motorType,confidence:i.motorTypeConfidence||.7}))}const a=Object.keys(t).length;return a>0&&(i=Object.values(t).reduce(((e,t)=>e+t.confidence),0)/a),a>0?{...t,overallConfidence:i}:null}async learnFromPDF(e,t){if(!this.initialized)return;const i=`pdf_format_${e.type}`,a=this.patterns.get(i)||{count:0,success:0};a.count++,Object.keys(t).length>5&&a.success++,this.patterns.set(i,a),await this.saveModel()}async learnFromInteraction(e,t,i){this.initialized&&(this.interactions.push({query:e,response:t.response?.message||"unknown",context:{vehicle:i.vehicle?.model,timestamp:new Date},timestamp:new Date}),this.interactions.length>100&&(this.interactions=this.interactions.slice(-100)),await this.saveModel())}async saveModel(){try{const e={patterns:Array.from(this.patterns.entries()),interactions:this.interactions,version:"1.0",lastUpdated:new Date};localStorage.setItem("ai-learning-model",JSON.stringify(e))}catch(e){console.warn("Could not save learning model:",e)}}}"undefined"!=typeof module&&module.exports&&(module.exports=AIAssistant);